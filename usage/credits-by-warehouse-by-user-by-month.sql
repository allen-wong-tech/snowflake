/*
Credits by warehouse by user by month

*/

WITH CREDITS_PER_QUERY as (
    select
        MH.NAME as WAREHOUSE_NAME,
        DATE_TRUNC("Month", MH.START_TIME) as USAGE_MONTH,
        MH.SERVICE_TYPE,
        MH.START_TIME,
        MH.END_TIME,
        MH.CREDITS_USED,
        QH.QUERY_ID,
        QH.QUERY_TYPE,
        QH.USER_NAME,
        QH.ROLE_NAME,
        QH.START_TIME as QUERY_START_TIME,
        QH.END_TIME as QUERY_END_TIME,
        QH.EXECUTION_TIME,
        (
            QH.EXECUTION_TIME / SUM(QH.EXECUTION_TIME) OVER (partition by MH.NAME, MH.START_TIME, MH.END_TIME)
        ) * 100 as PCT_CREDIT_USED_BY_QUERY,((PCT_CREDIT_USED_BY_QUERY / 100) * MH.CREDITS_USED) as CREDIT_USED_BY_QUERY
    FROM
        "SNOWFLAKE"."ACCOUNT_USAGE"."METERING_HISTORY" MH
        JOIN "SNOWFLAKE"."ACCOUNT_USAGE"."QUERY_HISTORY" QH ON MH.ENTITY_ID = QH.WAREHOUSE_ID
        AND QH.START_TIME BETWEEN MH.START_TIME
        and MH.END_TIME
    WHERE
        --QH.EXECUTION_STATUS = 'SUCCESS' AND -- Commented since failed execution will also consume compute
        QH.WAREHOUSE_SIZE is not null -- eliminate queries served by CS layer
        AND MH.START_TIME > DATE_TRUNC("Month", add_months(current_date(), -6)) --EDIT THIS AS PER ANALYSIS PERIOD
)
select
    WAREHOUSE_NAME,
    USER_NAME,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-1)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-2)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH2,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-3)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH3,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-4)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH4,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-5)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH5,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-6)) THEN CREDIT_USED_BY_QUERY ELSE 0 END),2) AS CREDITS_IN_PREV_MONTH6,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-1)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-2)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH2,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-3)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH3,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-4)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH4,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-5)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH5,
    ROUND(SUM(CASE WHEN USAGE_MONTH =DATE_TRUNC("Month",add_months(current_date(),-6)) THEN 1 ELSE 0 END),0) AS QUERY_COUNT_IN_PREV_MONTH6
from
    CREDITS_PER_QUERY
group by
    WAREHOUSE_NAME,
    USER_NAME
order by
    3 desc, 1, 2;
